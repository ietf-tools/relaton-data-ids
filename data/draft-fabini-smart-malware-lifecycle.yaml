---
schema-version: v1.2.3
id: draft-fabini-smart-malware-lifecycle
title:
- content: Communication Network Perspective on Malware Lifecycle
  language:
  - en
  script:
  - Latn
  format: text/plain
docid:
- id: draft-fabini-smart-malware-lifecycle
  type: Internet-Draft
  primary: true
abstract:
- content: "<p>Today's systems, networks, and protocols are complex and include unknown
    vulnerabilities that adversaries can exploit. The large- scale deployment of network
    security protocols establishes an additional threat by implementing a substrate
    for hidden communications like covert or subliminal channels. The resulting ecosystem
    builds a convenient platform for malicious, automated software (malware) to infiltrate
    critical infrastructures, to gradually infect large parts of the system and to
    coordinate distributed malware operation. Based on the observation that malware
    depends on network communications to discover, propagate, coordinate, and unleash
    its functionality, this memo recommends methods to identify potential interfaces
    and interactions between malware and protocols. It proposes a generic malware
    lifecycle model that defines a set of generic malware states and possible transitions
    between these states. Coordinated activities of distributed malware can be mapped
    to state transitions in malware instances, supporting the identification of (potentially
    hidden) network communication as a trigger for actions and hints on protocols
    that enabled the communication. Eventually, the proposed model aims at supporting
    the identification of architectures, protocols, interfaces, and points in time
    that a) either inhibit hidden malware communication or b) allow for optimized
    detection of anomalies as main prerequisite for timely countermeasures. While
    earlier work focused on protecting single hosts from compromise, this memo adopts
    a holistic view and considers the health of the overall networked system to be
    of highest priority. Presuming vulnerable systems, we stress that components or
    subsystems must be disconnected on suspected infection in an attempt to continue
    (even partial) operation of the overall (non-infected) system after the disconnect.
    Containment - the isolation of an infected subsystem - becomes an essential security
    feature in the context of critical infrastructures that influences on deployed
    protocols, interfaces and architectures.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: includes
  bibitem:
    id: draft-fabini-smart-malware-lifecycle-00
    docid:
    - id: draft-fabini-smart-malware-lifecycle-00
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-fabini-smart-malware-lifecycle-00
      format: text/plain
ext:
  schema-version: v1.0.1
