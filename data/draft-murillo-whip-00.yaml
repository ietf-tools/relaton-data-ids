---
schema-version: v1.2.3
id: draft-murillo-whip-00
title:
- content: WebRTC-HTTP ingestion protocol (WHIP)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-murillo-whip-00
  type: src
type: standard
docid:
- id: draft-murillo-whip-00
  type: Internet-Draft
  primary: true
- id: I-D.murillo-whip
  type: IETF
  scope: anchor
docnumber: I-D.murillo-whip
date:
- type: published
  value: '2020-09-09'
contributor:
- person:
    name:
      given:
        forename:
        - content: Sergio
          language:
          - en
        - language:
          - en
          initial: S
        - language:
          - en
          initial: G
        formatted_initials:
          content: S. G.
          language:
          - en
      surname:
        content: Murillo
        language:
        - en
      completename:
        content: Sergio Garcia Murillo
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: CoSMo Software
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - language:
          - en
          initial: A
        formatted_initials:
          content: A.
          language:
          - en
      surname:
        content: Gouaillard
        language:
        - en
      completename:
        content: Dr. Alex Gouaillard
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: CoSMo Software
  role:
  - type: author
version:
- draft: '00'
revdate: '2020-09-09'
language:
- en
script:
- Latn
abstract:
- content: "<p>While WebRTC has been very sucessfull in a wide range of scenarios,
    its adption in the broadcasting/streaming industry is lagging behind. Currently
    there is no standard protocol (like SIP or RTSP) designed for ingesting media
    in a streaming service, and content providers still rely heavily on protocols
    like RTMP for it. These protocols are much older than webrtc and lack by default
    some important security and resilience features provided by webrtc with minimal
    delay. The media codecs used in older protocols do not always match those being
    used in WebRTC, mandating transcoding on the ingest node, introducing delay and
    degrading media quality. This transcoding step is always present in traditionnal
    streaming to support e.g. ABR, and comes at no cost. However webrtc implements
    client-side ABR, also called Network-Aware Encoding by e.g. Huavision, by means
    of simulcast and SVC codecs, which otherwise alleviate the need for server-side
    transcoding. Content protection and Privacy Enhancement can be achieve with End-to-End
    Encryption, which preclude any server- side media processing. This document proposes
    a simple HTTP based protocol that will allow WebRTC endpoings to ingest content
    into streaming servics and/or CDNs to fill this gap and facilitate deployment.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updatedBy
  bibitem:
    id: draft-murillo-whip-01
    docid:
    - id: draft-murillo-whip-01
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-murillo-whip-01
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-murillo-whip-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
