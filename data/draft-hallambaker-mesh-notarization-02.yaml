---
schema-version: v1.2.3
id: draft-hallambaker-mesh-notarization-02
title:
- content: 'Mathematical Mesh 3.0 Part IX: Mesh Notarized Signatures'
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-hallambaker-mesh-notarization-02
  type: src
type: standard
docid:
- id: draft-hallambaker-mesh-notarization-02
  type: Internet-Draft
  primary: true
- id: I-D.hallambaker-mesh-notarization
  type: IETF
  scope: anchor
docnumber: I-D.hallambaker-mesh-notarization
date:
- type: published
  value: '2024-10-14'
contributor:
- person:
    name:
      given:
        forename:
        - content: Phillip
          language:
          - en
        - language:
          - en
          initial: P
        formatted_initials:
          content: P.
          language:
          - en
      surname:
        content: Hallam-Baker
        language:
        - en
      completename:
        content: Phillip Hallam-Baker
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Venture Cryptography.
  role:
  - type: author
version:
- draft: '02'
revdate: '2024-10-14'
language:
- en
script:
- Latn
abstract:
- content: "<p>Creation and verification of Mesh Notarized Signatures is described.
    A notarized signature is a signature whose time of creation is attested by one
    or more parties in addition to the signer. In the case of Mesh Notarized Signatures,
    the attesting parties is the set of all parties participating in a Notarization
    Mesh. This ideally includes the relying parties. Each participant in a Notarization
    Mesh maintains their own notary log in the form of a DARE sequence authenticated
    by a Merkle tree. Participants periodically cross notarize their personal notary
    log with those maintained by other parties. A Mesh Notarized Signature is bound
    in time as having being created after time T1 by including one or more sequence
    apex values as signed attributes. A Mesh Notarized Signature is bound in time
    as having being created before time T2 by enrolling it in the signer's personal
    notarization log and engaging in cross-notarization with a sufficient number of
    Notarization Mesh participants to establish the desired proof. Defection is controlled
    through an accountability model. If a trusted notary produces multiple inconsistent
    signed cross Notarization tokens, this provides non-repudiable evidence of a default.
    https://mailarchive.ietf.org/arch/browse/mathmesh/ (http://whatever)Discussion
    of this draft should take place on the MathMesh mailing list (mathmesh@ietf.org),
    which is archived at.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updates
  bibitem:
    id: draft-hallambaker-mesh-notarization-01
    docid:
    - id: draft-hallambaker-mesh-notarization-01
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-hallambaker-mesh-notarization-01
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-hallambaker-mesh-notarization-02
doctype: internet-draft
ext:
  schema-version: v1.0.1
