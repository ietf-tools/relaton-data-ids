---
schema-version: v1.2.3
id: draft-ietf-lsr-distoptflood-05
title:
- content: IS-IS Distributed Flooding Reduction
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-ietf-lsr-distoptflood-05
  type: src
type: standard
docid:
- id: draft-ietf-lsr-distoptflood-05
  type: Internet-Draft
  primary: true
- id: I-D.ietf-lsr-distoptflood
  type: IETF
  scope: anchor
docnumber: I-D.ietf-lsr-distoptflood
date:
- type: published
  value: '2024-07-04'
contributor:
- person:
    name:
      given:
        forename:
        - content: Russ
          language:
          - en
        - language:
          - en
          initial: R
        formatted_initials:
          content: R.
          language:
          - en
      surname:
        content: White
        language:
        - en
      completename:
        content: Russ White
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Akamai
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Shraddha
          language:
          - en
        - language:
          - en
          initial: S
        formatted_initials:
          content: S.
          language:
          - en
      surname:
        content: Hegde
        language:
        - en
      completename:
        content: Shraddha Hegde
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Juniper Networks
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Tony
          language:
          - en
        - language:
          - en
          initial: T
        formatted_initials:
          content: T.
          language:
          - en
      surname:
        content: Przygienda
        language:
        - en
      completename:
        content: Tony Przygienda
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Juniper Networks
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Luay
          language:
          - en
        - language:
          - en
          initial: L
        formatted_initials:
          content: L.
          language:
          - en
      surname:
        content: Jalil
        language:
        - en
      completename:
        content: Luay Jalil
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Verizon
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Daniel
          language:
          - en
        - language:
          - en
          initial: D
        formatted_initials:
          content: D.
          language:
          - en
      surname:
        content: Voyer
        language:
        - en
      completename:
        content: Daniel Voyer
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Bell Canada
  role:
  - type: author
version:
- draft: '05'
revdate: '2024-07-04'
language:
- en
script:
- Latn
abstract:
- content: <p>In dense topologies (such as data center fabrics based on the Clos and
    butterfly though not limited to those; in fact any topology with relatively high
    degree of connectivity qualifies here) IGP flooding mechanisms designed originally
    for rather sparse topologies can "overflood", or in other words generate too many
    identical copies of same information arriving at a given node from other devices.
    This normally results in slower convergence times and higher resource utilization
    to process and discard the superfluous copies. Distributed algorithms that restrict
    the amount of flooding performed can be constructed, as long as they result in
    a flooding subgraph connecting all nodes on the network in terms of flooding still.
    Such algorithms can reduce resource utilization significantly, while improving
    convergence performance. We denote such algorithm as "distributed flooding prunners"
    (or "prunner" for short) while requiring them to follow some simple, additional
    rules. The rules presented in detail later allow to deploy mix of nodes any prunning
    algorithm and multiple prunners at the same time if necessary while ensuring correct
    flood coverage for the whole network. Additionally, node by node migration, without
    flag day, from one algorithm to another if necessary is possible. And assuming
    the algorithms are behaving correctly, the blast radius on algorithm change is
    normally contained to a single node performing the switch and obviously the convergence
    of an algorithm on introduction or removal of node running such algorithm. One
    such algorithm (modification of previous art), deployable even without configuration,
    is described in this document. Beside reducing the extraneous copies, the proposed
    solution does "load- balance" flooding across different possible paths in the
    network to prevent build up of flooding hot-spots.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updates
  bibitem:
    id: draft-ietf-lsr-distoptflood-03
    docid:
    - id: draft-ietf-lsr-distoptflood-03
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-ietf-lsr-distoptflood-03
      format: text/plain
- type: updatedBy
  bibitem:
    id: draft-ietf-lsr-distoptflood-06
    docid:
    - id: draft-ietf-lsr-distoptflood-06
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-ietf-lsr-distoptflood-06
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-ietf-lsr-distoptflood-05
doctype: internet-draft
ext:
  schema-version: v1.0.1
