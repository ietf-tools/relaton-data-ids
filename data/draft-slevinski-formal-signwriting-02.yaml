---
schema-version: v1.2.3
id: draft-slevinski-formal-signwriting-02
title:
- content: Formal SignWriting
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-slevinski-formal-signwriting-02
  type: src
type: standard
docid:
- id: draft-slevinski-formal-signwriting-02
  type: Internet-Draft
  primary: true
- id: I-D.slevinski-formal-signwriting
  type: IETF
  scope: anchor
docnumber: I-D.slevinski-formal-signwriting
date:
- type: published
  value: '2017-06-24'
contributor:
- person:
    name:
      given:
        forename:
        - content: Stephen
          language:
          - en
        - language:
          - en
          initial: S
        - language:
          - en
          initial: E
        formatted_initials:
          content: S. E.
          language:
          - en
      surname:
        content: Slevinski
        language:
        - en
      completename:
        content: Stephen E Slevinski Jr
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Center for Sutton Movement Writing
  role:
  - type: author
version:
- draft: '02'
revdate: '2017-06-24'
language:
- en
script:
- Latn
abstract:
- content: "<p>Sutton SignWriting is the universal and complete solution for written
    sign language. It has been applied by a wide and deep international community
    of sign language users. Sutton SignWriting is an international standard for writing
    sign languages by hand or with computers. From education to research, from entertainment
    to religion, SignWriting has proven useful because people are using it to write
    signed languages. Formal SignWriting (FSW) is a faithful character-encoding of
    Sutton SignWriting based on 2-dimensional mathematics. FSW defines a formal language
    for written sign languages where any sign of any sign language can be written
    as a string of ASCII or Unicode characters. The mathematical names are explained
    with tokens and regular expression patterns. Signs are written in a spatial SignBox,
    where each symbol is positioned with a 2-dimension Cartesian coordinate. For sorting,
    each sign can have an optional temporal sequence of symbols that is outside of
    the SignBox. To create sentences, signs are written sequentially, interspersed
    with punctuation symbols. The styling string of Formal SignWriting uses a lite
    markup to define a variety of styling options. The entire sign can be customized
    for padding, coloring, and size. Individual symbols within a sign can be customized
    for coloring and size. For SVG, class names and IDs can be defined. The query
    language of Formal SignWriting uses a lite markup, similar to FSW, to define a
    variety of searching possibilities. The spatial SignBox can be searched for symbols
    or ranges of symbols. For each symbol or range, the search can specify if the
    symbol only needs to be found somewhere in the SignBox, or if the symbol needs
    to be found near certain coordinates. The temporal sequence can be searched for
    starting symbols, written as a sequential list of symbols and ranges of symbols.
    When searching the temporal sequence, the search results will be limited to signs
    that start with a matching temporal sequence. Each query string is transformed
    into one or more regular expressions. The regular expressions are used to quickly
    search large amounts of data. Formal SignWriting has been specifically designed
    to integrate with standard technology on the phone, tablet, and desktop. Four
    main components make this integration possible: 1) Fonts, 2) Scalar Vector Graphics,
    3) HTML and CSS, and 4) JavaScript. Formal SignWriting as ASCII characters is
    compatible with and optimized for UTF-8. There are 2 options for Formal SignWriting
    in Unicode. Option 1 is an alternate encoding that replaces the Sutton SignWriting
    block in Unicode. Option 1 focuses on small size, simple design, and ease of use.
    Option 2 is an encoding that is 97.5% official Unicode with defined characters
    in the Sutton SignWriting block. Option 2 focuses on augmenting the Unicode 8
    standard with 17 new control characters for a design that is compatible with Formal
    SignWriting. This memo defines a conceptual character encoding map for the Internet
    community. It is published for reference, examination, implementation, and evaluation.
    Distribution of this memo is unlimited.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updates
  bibitem:
    id: draft-slevinski-formal-signwriting-01
    docid:
    - id: draft-slevinski-formal-signwriting-01
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-slevinski-formal-signwriting-01
      format: text/plain
- type: updatedBy
  bibitem:
    id: draft-slevinski-formal-signwriting-05
    docid:
    - id: draft-slevinski-formal-signwriting-05
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-slevinski-formal-signwriting-05
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-slevinski-formal-signwriting-02
doctype: internet-draft
ext:
  schema-version: v1.0.1
