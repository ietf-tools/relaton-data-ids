---
schema-version: v1.2.3
id: draft-kim-abnf-codegen-01
title:
- content: An ABNF Extension for code generation
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-kim-abnf-codegen-01
  type: src
type: standard
docid:
- id: draft-kim-abnf-codegen-01
  type: Internet-Draft
  primary: true
- id: I-D.kim-abnf-codegen
  type: IETF
  scope: anchor
docnumber: I-D.kim-abnf-codegen
date:
- type: published
  value: '2009-11-26'
contributor:
- person:
    name:
      given:
        forename:
        - content: Jong
          language:
          - en
        - language:
          - en
          initial: J
        formatted_initials:
          content: J.
          language:
          - en
      surname:
        content: Kim
        language:
        - en
      completename:
        content: Jong Kim
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: VineGen Inc
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Munjo
          language:
          - en
        - language:
          - en
          initial: M
        formatted_initials:
          content: M.
          language:
          - en
      surname:
        content: Yu
        language:
        - en
      completename:
        content: Munjo Yu
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: VineGen Inc
  role:
  - type: author
version:
- draft: '01'
revdate: '2009-11-26'
language:
- en
script:
- Latn
abstract:
- content: <p>This document describes an ABNF extension for code generation. ABNF
    has been widely used for decades. While its popurarity is ascribed to its simplicity
    and ease of use, the demand for code generation has been fulfilled only marginally,
    by some sort of non-standard extensions, or by conversion to yet another meta
    language. One possible solution is to add more detailed specifications to the
    existing ABNF standard, but this hurts the very competitiveness of ABNF itself.
    Another solution is to standardize an extension and make it a 'sister' standard
    in parallel to the existing ABNF standaard. In this document we propose such an
    extension as a standard. The generated code using the proposed extension would
    be "complete", meaning no need to modify by hand, if there exist no concepts of
    unordered groups in the specification.</p>
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-kim-abnf-codegen-01
doctype: internet-draft
ext:
  schema-version: v1.0.1
