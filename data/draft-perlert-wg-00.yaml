---
schema-version: v1.2.3
id: draft-perlert-wg-00
title:
- content: Protocol for Evaluating Reinforcement Learning Environments in Real Time
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-perlert-wg-00
  type: src
type: standard
docid:
- id: draft-perlert-wg-00
  type: Internet-Draft
  primary: true
- id: I-D.perlert-wg
  type: IETF
  scope: anchor
docnumber: I-D.perlert-wg
date:
- type: published
  value: '2020-08-13'
contributor:
- person:
    name:
      given:
        forename:
        - content: Ruben
          language:
          - en
        - language:
          - en
          initial: R
        formatted_initials:
          content: R.
          language:
          - en
      surname:
        content: Montero
        language:
        - en
      completename:
        content: Ruben Montero
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: University of A Coruna
  role:
  - type: author
version:
- draft: '00'
revdate: '2020-08-13'
language:
- en
script:
- Latn
abstract:
- content: "<p>This document defines a simple UDP protocol for communicating a server
    simulating a reinforcement learning environment and a client observing it and
    responding with actions. Reinforcement learning problems are usually defined within
    the scope of a Markov Decission Process (MDP) where an agent sends an action belonging
    to an action space to an environment. The environment acts as a black box returning
    an observation and a reward for the agent, whose goal is to maximize the total
    obtained rewards. Although the problem statement is easy to understand, there
    are no conventions on how to communicate a reinforcement learning simulation with
    a client agent, either in a local network or over the Internet. Additionally,
    giving an answer to this can be especially useful when it comes to multiagent
    support and analysis. The protocol PERLERT defined in this document assumes that
    server and client have shared certain information beforehand via another way of
    communication like a web page served using HTTP protocol. For example, the client
    must know a port number and an instance number before proceeding to participate
    in a simulation run on a server. Also, although it is often desired to know the
    full feedback from the environment, PERLERT focuses on real-time interaction where
    human agents can interact with AI agents even if that means that information can
    be lost due to network packet loss.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-perlert-wg-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
