---
schema-version: v1.2.3
id: draft-litkowski-pce-state-sync-00
title:
- content: Enhancing redundant stateful PCE architecture to support LSP association
    constraint based computation
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-litkowski-pce-state-sync-00
  type: src
type: standard
docid:
- id: draft-litkowski-pce-state-sync-00
  type: Internet-Draft
  primary: true
- id: I-D.litkowski-pce-state-sync
  type: IETF
  scope: anchor
docnumber: I-D.litkowski-pce-state-sync
date:
- type: published
  value: '2016-10-26'
contributor:
- person:
    name:
      given:
        forename:
        - content: Stephane
          language:
          - en
        - language:
          - en
          initial: S
        formatted_initials:
          content: S.
          language:
          - en
      surname:
        content: Litkowski
        language:
        - en
      completename:
        content: Stephane Litkowski
        language:
        - en
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Siva
          language:
          - en
        - language:
          - en
          initial: S
        formatted_initials:
          content: S.
          language:
          - en
      surname:
        content: Sivabalan
        language:
        - en
      completename:
        content: Siva Sivabalan
        language:
        - en
  role:
  - type: author
version:
- draft: '00'
revdate: '2016-10-26'
language:
- en
script:
- Latn
abstract:
- content: "<p>[I-D.ietf-pce-stateful-pce] defines stateful extensions for Path Computation
    Element Communication Protocol (PCEP). A Path Computation Client (PCC) can synchronize
    an LSP state information to a Path Computation Element (PCE). [I-D.ietf-pce-stateful-pce]
    allows for PCE redundancy where a PCC can have redundant PCEP sessions towards
    multiple PCEs. In such a case, a PCC gives control on a LSP to only a single PCE,
    and only one PCE is responsible for path computation for this delegated LSP. There
    are some use cases where path computation for a particular LSP is linked to another:
    the most common use case is path disjointness. The set of LSPs that are dependant
    to each other may start from different head-ends. In such a case, we cannot guarantee
    that at any time all the head-ends (acting as PCCs) will delegate their LSP to
    the same PCE. This scenario where a group of dependant LSPs are delegated to multiple
    PCEs is called a split-brain scenario. This split-brain scenario may lead to computation
    loops between PCEs. This document proposes a solution to enhance redundant stateful
    PCE architecture to overcome those issues.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updatedBy
  bibitem:
    id: draft-litkowski-pce-state-sync-09
    docid:
    - id: draft-litkowski-pce-state-sync-09
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-litkowski-pce-state-sync-09
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-litkowski-pce-state-sync-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
