---
schema-version: v1.2.3
id: draft-kun-stoder-00
title:
- content: 'STODER: A Reliable TCP Spurious Timeout Detection Algorithm using Repacketization'
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-kun-stoder-00
  type: src
type: standard
docid:
- id: draft-kun-stoder-00
  type: Internet-Draft
  primary: true
- id: I-D.kun-stoder
  type: IETF
  scope: anchor
docnumber: I-D.kun-stoder
date:
- type: published
  value: '2004-09-07'
contributor:
- person:
    name:
      given:
        forename:
        - content: Qian
          language:
          - en
        - language:
          - en
          initial: Q
        formatted_initials:
          content: Q.
          language:
          - en
      surname:
        content: Zhang
        language:
        - en
      completename:
        content: Qian Zhang
        language:
        - en
  role:
  - type: author
version:
- draft: '00'
revdate: '2004-09-07'
language:
- en
script:
- Latn
abstract:
- content: "<p>Spurious timeouts are not rare events in wireless wide-area network,
    e.g. GPRS or EDGE. It has been reported that spurious timeouts greatly decrease
    TCP's performance in many aspects. It is not only because of the unnecessary retransmission
    of the last window of data, but also the congestion control is falsely triggered.
    Existing proposals of detecting spurious timeouts either require additional information
    on each data packet, e.g., the timestamps option, or heuristically deduce spurious
    timeouts. These approaches need heuristic feedbacks from the receiver, and hence
    are vulnerable to misbehaving receivers. In this document, a novel algorithm that
    reliably detects spurious TCP retransmission timeouts, called STODER, is presented.
    STODER is a TCP sender algorithm and does not require any information attached
    on data packets. STODER exploits TCP repacketization to detect false retransmission
    and is well protected against malicious receivers. Therefore, a more aggressive
    response algorithm can be safely applied along with the STODER algorithm.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-kun-stoder-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
