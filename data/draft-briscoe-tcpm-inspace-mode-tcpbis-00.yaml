---
schema-version: v1.2.3
id: draft-briscoe-tcpm-inspace-mode-tcpbis-00
title:
- content: Inner Space for all TCP Options (Kitchen Sink Draft - to be Split Up)
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-briscoe-tcpm-inspace-mode-tcpbis-00
  type: src
type: standard
docid:
- id: draft-briscoe-tcpm-inspace-mode-tcpbis-00
  type: Internet-Draft
  primary: true
- id: I-D.briscoe-tcpm-inspace-mode-tcpbis
  type: IETF
  scope: anchor
docnumber: I-D.briscoe-tcpm-inspace-mode-tcpbis
date:
- type: published
  value: '2015-03-09'
contributor:
- person:
    name:
      given:
        forename:
        - content: Bob
          language:
          - en
        - language:
          - en
          initial: B
        formatted_initials:
          content: B.
          language:
          - en
      surname:
        content: Briscoe
        language:
        - en
      completename:
        content: Bob Briscoe
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: BT
  role:
  - type: author
version:
- draft: '00'
revdate: '2015-03-09'
language:
- en
script:
- Latn
abstract:
- content: "<p>This document describes an experimental redesign of TCP's extensibility
    mechanism. It aims to traverse most known middleboxes including connection splitters,
    by making it possible to tunnel all TCP options within the TCP Data. It provides
    a choice between in- order and out-of-order delivery for TCP options. In-order
    delivery is a useful new facility for options that control datastream processing.
    Out-of-order delivery has been the norm for TCP options until now, and is necessary
    for options involved with acknowledging data, otherwise flow control can deadlock.
    TCP's original design limits TCP option space to 40B. In the new design there
    is no such arbitrary limit, other than the maximum size of a segment. The TCP
    client can immediately start to use the extra option space optimistically from
    the very first SYN segment, by using a dual handshake. The dual handshake is designed
    to prevent a legacy server from getting confused and sending the control options
    to the application as user-data. The dual handshake is only one strategy - a single
    handshake will usually suffice once deployment is underway. In summary, the protocol
    should allow new TCP options to be introduced i) with minimal middlebox traversal
    problems; ii) with incremental deployment from legacy servers; iii) with zero
    handshaking delay iv) with a choice of in-order and out-of-order delivery v) without
    arbitrary limits on available space.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-briscoe-tcpm-inspace-mode-tcpbis-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
