---
schema-version: v1.2.3
id: draft-gouaillard-avtcore-codec-agn-rtp-payload
title:
- content: Codec agnostic RTP payload format for video
  language:
  - en
  script:
  - Latn
  format: text/plain
docid:
- id: draft-gouaillard-avtcore-codec-agn-rtp-payload
  type: Internet-Draft
  primary: true
abstract:
- content: "<p>RTP Media Chains usually rely on piping encoder output directly to
    packetizers. Media packetization formats often support a specific codec format
    and optimize RTP packets generation accordingly. With the development of Selective
    Forward Unit (SFU) solutions, that do not process media content server side, the
    need for media content processing at the origin and at the destination has arised.
    RTP Media Chains used e.g. in WebRTC solutions are increasingly relying on application-specific
    transforms that sit in-between encoder and packetizer on one end and in-between
    depacketizer and decoder on the other end. This use case has become so important,
    that the W3C is standardizing the capacity to access encoded content with the
    [WebRTCInsertableStreams] API proposal. An extremely popular use case is application
    level end-to-end encryption of media content, using for instance [SFrame]. Whatever
    the modification applied to the media content, RTP packetizers can no longer expect
    to use packetization formats that mandate media content to be in a specific codec
    format. In the extreme cases like encryption, where the RTP Payload is made completely
    opaque to the SFUs, some extra mechanism must also be added for them to be able
    to route the packets without depending on RTP payload or payload headers. The
    traditionnal process of creating a new RTP Payload specification per content would
    not be practical as we would need to make a new one for each codec-transform pair.
    This document describes a solution, which provides the following features in the
    case the encoded content has been modified before reaching the packetizer: - a
    paylaod agnostic RTP packetization format that can be used on any media content,
    - a negotiation mechanism for the above format and the inner payload, Both of
    the above mechanism are backward compatible with most of (S)RTP/RTCP mechanisms
    used for bandwidth estimation and congestion control in RTP/SRTP/webrtc, including
    but not limited to SSRC, RED, FEC, RTX, NACK, SR/RR, REMB, transport-wide-CC,
    TMBR,.... It as illustrated by existing implementations in chrome, safari, and
    Medooze. This document also describes a solution to allow SFUs to continue performing
    packet routing on top of this generic RTP packetization format. This document
    complements the SFrame (media encryption), and Dependency Descriptor (AV1 payload
    annex) documents to provide an End-to-End-Encryption solution that would sit on
    top of SRTP/Webrtc, use SFUs on the media back-end, and leverage W3C APIs in the
    browser. A high level description of such system will be provided as an informational
    I-D in the SFrame WG and then cited here.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: includes
  bibitem:
    id: draft-gouaillard-avtcore-codec-agn-rtp-payload-00
    docid:
    - id: draft-gouaillard-avtcore-codec-agn-rtp-payload-00
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-gouaillard-avtcore-codec-agn-rtp-payload-00
      format: text/plain
- type: includes
  bibitem:
    id: draft-gouaillard-avtcore-codec-agn-rtp-payload-01
    docid:
    - id: draft-gouaillard-avtcore-codec-agn-rtp-payload-01
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-gouaillard-avtcore-codec-agn-rtp-payload-01
      format: text/plain
ext:
  schema-version: v1.0.1
