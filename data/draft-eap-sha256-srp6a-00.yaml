---
schema-version: v1.2.3
id: draft-eap-sha256-srp6a-00
title:
- content: EAP SHA256-SRP6a Authentication Protocol
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-eap-sha256-srp6a-00
  type: src
type: standard
docid:
- id: draft-eap-sha256-srp6a-00
  type: Internet-Draft
  primary: true
- id: I-D.eap-sha256-srp6a
  type: IETF
  scope: anchor
docnumber: I-D.eap-sha256-srp6a
date:
- type: published
  value: '2022-11-23'
contributor:
- person:
    name:
      given:
        forename:
        - content: Sergio
          language:
          - en
        - language:
          - en
          initial: S
        formatted_initials:
          content: S.
          language:
          - en
      surname:
        content: Ammirata
        language:
        - en
      completename:
        content: Sergio Ammirata
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: SipRadius LLC.
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Gijs
          language:
          - en
        - language:
          - en
          initial: G
        formatted_initials:
          content: G.
          language:
          - en
      surname:
        content: Peskens
        language:
        - en
      completename:
        content: Gijs Peskens
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: SipRadius LLC.
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Brad
          language:
          - en
        - language:
          - en
          initial: B
        formatted_initials:
          content: B.
          language:
          - en
      surname:
        content: Gilmer
        language:
        - en
      completename:
        content: Brad Gilmer
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Video Services Forum
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: John
          language:
          - en
        - language:
          - en
          initial: J
        formatted_initials:
          content: J.
          language:
          - en
      surname:
        content: Iacovelli
        language:
        - en
      completename:
        content: John Iacovelli
        language:
        - en
    affiliation:
    - organization:
        name:
        - content: Video Services Forum
  role:
  - type: author
version:
- draft: '00'
revdate: '2022-11-23'
language:
- en
script:
- Latn
abstract:
- content: "<p>This document describes an authentication protocol intended for Internet
    applications which may require a robust and non-leaky exchange of credentials
    even under adverse network conditions. The protocol has the ability to recover
    from packet loss during the authentication process, as for example, should the
    Internet application use the UDP transport protocol under lossy network conditions.
    It does so by allowing the retransmission of lost packets during authentication.
    The protocol follows the Extensible Authentication Protocol (RFC 3748 and RFC
    5247) framework, which allows for the use of multiple authentication mechanisms.
    It utilizes Secure Remote Password protocol (RFC 2945), with strong, password-based
    cryptographic hashing. It utilizes the Secure Hashing Algorithm message digest
    algorithm as the hashing mechanism. The authentication protocol allows for one
    Server and one or more Clients. Where multiple Clients exist, each may communicate
    only with the Server. Clients initiate the authentication exchange process. Until
    the authentication completes successfully, the Server and Client ignore/discard
    any packets except those supporting the authentication process. The authentication
    algorithm is based on a username/password or passphrase pair. These are used to
    generate secure ephemeral keys. The Server has a store of all valid usernames
    and password hashes. Each Client stores its own username and password. The authentication
    algorithm provides for each side to prove to the other that it has a valid username/password
    or passphrase pair, in a way that a third-party monitoring the transactions could
    not use intercepted information to later successfully authenticate. This mutual
    authentication exchange consists of several pairs of interactions. The first is
    a request for authentication by the Client, containing the Client name, to which
    the Server responds with a challenge for its identity. The Client responds with
    the Server name for verification purposes. Thereafter, Client and Server each
    exchange three values consisting of password salts, ephemeral public keys, and
    hash values. These are generated and verified by Client and Server in accordance
    with SRP against the stored password/passphrase hashes. While any step in the
    process may be repeated to provide for dropped packets should a response not be
    received, the authentication process is terminated by any incorrect value received
    in any response. Multicast UDP authentication is also supported, with certain
    limitations.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-eap-sha256-srp6a-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
