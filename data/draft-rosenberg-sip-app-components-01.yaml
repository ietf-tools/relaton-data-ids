---
schema-version: v1.2.3
id: draft-rosenberg-sip-app-components-01
title:
- content: An Application Server Component Architecture for SIP
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-rosenberg-sip-app-components-01
  type: src
type: standard
docid:
- id: draft-rosenberg-sip-app-components-01
  type: Internet-Draft
  primary: true
- id: I-D.rosenberg-sip-app-components
  type: IETF
  scope: anchor
docnumber: I-D.rosenberg-sip-app-components
date:
- type: published
  value: '2001-03-09'
contributor:
- person:
    name:
      given:
        forename:
        - content: Jonathan
          language:
          - en
        - language:
          - en
          initial: J
        formatted_initials:
          content: J.
          language:
          - en
      surname:
        content: Rosenberg
        language:
        - en
      completename:
        content: Jonathan Rosenberg
        language:
        - en
  role:
  - type: author
- person:
    name:
      given:
        forename:
        - content: Henning
          language:
          - en
        - language:
          - en
          initial: H
        formatted_initials:
          content: H.
          language:
          - en
      surname:
        content: Schulzrinne
        language:
        - en
      completename:
        content: Henning Schulzrinne
        language:
        - en
  role:
  - type: author
version:
- draft: '01'
revdate: '2001-03-09'
language:
- en
script:
- Latn
abstract:
- content: "<p>An application server is defined as an entity that is capable of providing
    advanced features to users. Examples of features include call forwarding, call
    screening, debit card calling, web interactive voice response, etc. However, the
    set of functions needed to enable a broad range of such applications is quite
    large - it includes speech recognition, DTMF recognition and digit collection,
    text-to-speech synthesis, database interfacing, audio and video coding and decoding,
    audio and video bridging and mixing, and signaling, to name a few. Supporting
    such a large set of functions on the same box presents a major challenge. To solve
    this problem, the industry is proposing a decomposition of the application server
    into two components - a media server that handles the media component, and an
    application server that handles the call control, data, and signaling. The interface
    that has been proposed between these two elements is a control mechanism along
    the lines of MGCP or Megaco. In this paper, we propose an orthogonal decomposition,
    which breaks an application server into application server components. Each component
    represents a application server in its own right, but it provides a well defined
    component that by itself may be a complete, but simpler, application.</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-rosenberg-sip-app-components-01
doctype: internet-draft
ext:
  schema-version: v1.0.1
