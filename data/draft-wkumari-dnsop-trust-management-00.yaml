---
schema-version: v1.2.3
id: draft-wkumari-dnsop-trust-management-00
title:
- content: Simplified Updates of DNS Security (DNSSEC) Trust Anchors
  language:
  - en
  script:
  - Latn
  format: text/plain
link:
- content: https://datatracker.ietf.org/doc/html/draft-wkumari-dnsop-trust-management-00
  type: src
type: standard
docid:
- id: draft-wkumari-dnsop-trust-management-00
  type: Internet-Draft
  primary: true
- id: I-D.wkumari-dnsop-trust-management
  type: IETF
  scope: anchor
docnumber: I-D.wkumari-dnsop-trust-management
date:
- type: published
  value: '2015-06-29'
contributor:
- person:
    name:
      given:
        forename:
        - content: Warren
          language:
          - en
        - language:
          - en
          initial: W
        - language:
          - en
          initial: A
        formatted_initials:
          content: W. A.
          language:
          - en
      surname:
        content: Kumari
        language:
        - en
      completename:
        content: Warren "Ace" Kumari
        language:
        - en
  role:
  - type: author
version:
- draft: '00'
revdate: '2015-06-29'
language:
- en
script:
- Latn
abstract:
- content: "<p>This document describes a simple means for automated updating of DNSSEC
    trust anchors. This mechanism allows the trust anchor maintainer to monitor the
    progress of the migration to the new trust anchor, and so predict the effect before
    decommissioning the existing trust anchor. It is primarily aimed at the root DNSSEC
    trust anchor, but should be applicable to trust anchors elsewhere in the DNS as
    well. [ Ed note - informal summary: One of the big issues with rolling the root
    key is that it is unclear who all is using RFC5011, who all has successfully fetched
    and installed the new key, and, most importantly, who all will die when the old
    key is revoked. A secondary problem is that the response sizes suddenly increase,
    potentially blowing the MTU limit. This document describes a method that is basically
    CDS, but for the root key (or any other trust anchor). Unlike the CDS record though,
    this record lives at a special name - by querying for this name, the recursive
    exposes its list of TAs to the auth server (signalling upstream). This allows
    the TA maintainer to predict how many, and who all will break. It also allows
    the pre-publication of a key before using it, and so avoids the need to double
    response sizes...] [ Ed note: Text inside square brackets ([]) is additional background
    information, answers to frequently asked questions, general musings, etc. They
    will be removed before publication.] [ This document is being collaborated on
    in Github at: https://github.com/wkumari/draft-wkumari-dnsop-trust-management.
    The most recent version of the document, open issues, etc should all be available
    here. The authors (gratefully) accept pull requests ]</p>"
  language:
  - en
  script:
  - Latn
  format: text/html
relation:
- type: updatedBy
  bibitem:
    id: draft-wkumari-dnsop-trust-management-01
    docid:
    - id: draft-wkumari-dnsop-trust-management-01
      type: Internet-Draft
      primary: true
    formattedref:
      content: draft-wkumari-dnsop-trust-management-01
      format: text/plain
series:
- type: main
  title:
    content: Internet-Draft
    language:
    - en
    script:
    - Latn
    format: text/plain
  number: draft-wkumari-dnsop-trust-management-00
doctype: internet-draft
ext:
  schema-version: v1.0.1
